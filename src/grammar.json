{
  "name": "seed7",
  "rules": {
    "source_file": {
      "type": "REPEAT",
      "content": {
        "type": "SYMBOL",
        "name": "_statement"
      }
    },
    "_statement": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "include_statement"
        },
        {
          "type": "SYMBOL",
          "name": "declaration"
        },
        {
          "type": "SYMBOL",
          "name": "func_declaration"
        },
        {
          "type": "SYMBOL",
          "name": "_expression"
        }
      ]
    },
    "include_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "$"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "include"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "const"
            },
            {
              "type": "STRING",
              "value": "var"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "STRING",
          "value": "is"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "value"
            },
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "SYMBOL",
              "name": "enum_expression"
            }
          ]
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "func_declaration": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "const"
        },
        {
          "type": "STRING",
          "value": "func"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "SYMBOL",
          "name": "parameter_list"
        },
        {
          "type": "STRING",
          "value": "is"
        },
        {
          "type": "SYMBOL",
          "name": "return_statement"
        },
        {
          "type": "STRING",
          "value": ";"
        }
      ]
    },
    "return_statement": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "return"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "SYMBOL",
              "name": "value"
            }
          ]
        }
      ]
    },
    "parameter_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "("
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "attr_param"
            },
            {
              "type": "SYMBOL",
              "name": "param"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "attr_param"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "param"
                  }
                ]
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": ")"
        }
      ]
    },
    "attr_param": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "attr"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        }
      ]
    },
    "param": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "val"
            },
            {
              "type": "STRING",
              "value": "ref"
            },
            {
              "type": "STRING",
              "value": "in"
            },
            {
              "type": "STRING",
              "value": "in var"
            },
            {
              "type": "STRING",
              "value": "inout"
            }
          ]
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": ":"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "function_call": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "name"
              },
              {
                "type": "SYMBOL",
                "name": "type"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "SYMBOL",
            "name": "argument_list"
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "argument_list": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_expression"
            },
            {
              "type": "SYMBOL",
              "name": "value"
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "CHOICE",
                "members": [
                  {
                    "type": "SYMBOL",
                    "name": "_expression"
                  },
                  {
                    "type": "SYMBOL",
                    "name": "value"
                  }
                ]
              }
            ]
          }
        }
      ]
    },
    "type": {
      "type": "CHOICE",
      "members": [
        {
          "type": "FIELD",
          "name": "array",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": "array"
              },
              {
                "type": "SYMBOL",
                "name": "type"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "boolean"
        },
        {
          "type": "STRING",
          "value": "integer"
        },
        {
          "type": "STRING",
          "value": "bigInteger"
        },
        {
          "type": "STRING",
          "value": "rational"
        },
        {
          "type": "STRING",
          "value": "bigRational"
        },
        {
          "type": "STRING",
          "value": "float"
        },
        {
          "type": "STRING",
          "value": "complex"
        },
        {
          "type": "STRING",
          "value": "char"
        },
        {
          "type": "STRING",
          "value": "string"
        },
        {
          "type": "STRING",
          "value": "hash"
        },
        {
          "type": "STRING",
          "value": "set"
        },
        {
          "type": "STRING",
          "value": "struct"
        },
        {
          "type": "STRING",
          "value": "bin64"
        },
        {
          "type": "STRING",
          "value": "bin32"
        },
        {
          "type": "STRING",
          "value": "bstring"
        },
        {
          "type": "STRING",
          "value": "color"
        },
        {
          "type": "STRING",
          "value": "time"
        },
        {
          "type": "STRING",
          "value": "duration"
        },
        {
          "type": "STRING",
          "value": "file"
        },
        {
          "type": "STRING",
          "value": "text"
        },
        {
          "type": "STRING",
          "value": "fileSys"
        },
        {
          "type": "STRING",
          "value": "process"
        },
        {
          "type": "STRING",
          "value": "category"
        },
        {
          "type": "STRING",
          "value": "reference"
        },
        {
          "type": "STRING",
          "value": "ref_list"
        },
        {
          "type": "STRING",
          "value": "program"
        },
        {
          "type": "STRING",
          "value": "ptr"
        },
        {
          "type": "STRING",
          "value": "func"
        },
        {
          "type": "STRING",
          "value": "varfunc"
        },
        {
          "type": "STRING",
          "value": "void"
        },
        {
          "type": "STRING",
          "value": "proc"
        },
        {
          "type": "STRING",
          "value": "type"
        },
        {
          "type": "STRING",
          "value": "object"
        },
        {
          "type": "STRING",
          "value": "expr"
        },
        {
          "type": "STRING",
          "value": "bitset"
        }
      ]
    },
    "value": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SYMBOL",
          "name": "boolean"
        },
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "SYMBOL",
          "name": "string"
        },
        {
          "type": "SYMBOL",
          "name": "float"
        },
        {
          "type": "SYMBOL",
          "name": "bigRational"
        },
        {
          "type": "SYMBOL",
          "name": "rational"
        },
        {
          "type": "SYMBOL",
          "name": "bigInteger"
        },
        {
          "type": "SYMBOL",
          "name": "NIL"
        },
        {
          "type": "SYMBOL",
          "name": "char"
        },
        {
          "type": "SYMBOL",
          "name": "empty"
        },
        {
          "type": "SYMBOL",
          "name": "STD_NULL"
        },
        {
          "type": "SYMBOL",
          "name": "forward"
        }
      ]
    },
    "_expression": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "binary_expression"
              },
              {
                "type": "SYMBOL",
                "name": "unary_expression"
              },
              {
                "type": "SYMBOL",
                "name": "parenthesized_expression"
              },
              {
                "type": "SYMBOL",
                "name": "name"
              },
              {
                "type": "SYMBOL",
                "name": "function_call"
              },
              {
                "type": "SYMBOL",
                "name": "value_operator"
              },
              {
                "type": "SYMBOL",
                "name": "set_expression"
              },
              {
                "type": "SYMBOL",
                "name": "hash_expression"
              },
              {
                "type": "SYMBOL",
                "name": "struct_expression"
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "cast"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "NIL": {
      "type": "STRING",
      "value": "NIL"
    },
    "empty": {
      "type": "STRING",
      "value": "empty"
    },
    "STD_NULL": {
      "type": "STRING",
      "value": "STD_NULL"
    },
    "forward": {
      "type": "STRING",
      "value": "forward"
    },
    "line_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "#"
        },
        {
          "type": "PATTERN",
          "value": ".*"
        }
      ]
    },
    "block_comment": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "(*"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "."
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "*)"
        }
      ]
    },
    "binary_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "left",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "SYMBOL",
                  "name": "value"
                }
              ]
            }
          },
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "binary_operator"
            }
          },
          {
            "type": "FIELD",
            "name": "right",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "SYMBOL",
                  "name": "value"
                }
              ]
            }
          }
        ]
      }
    },
    "unary_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "FIELD",
            "name": "operator",
            "content": {
              "type": "SYMBOL",
              "name": "unary_operator"
            }
          },
          {
            "type": "FIELD",
            "name": "argument",
            "content": {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SYMBOL",
                  "name": "_expression"
                },
                {
                  "type": "SYMBOL",
                  "name": "value"
                }
              ]
            }
          }
        ]
      }
    },
    "value_operator": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "SYMBOL",
          "name": "name"
        }
      ]
    },
    "parenthesized_expression": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "("
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_expression"
              },
              {
                "type": "SYMBOL",
                "name": "value"
              }
            ]
          },
          {
            "type": "STRING",
            "value": ")"
          }
        ]
      }
    },
    "set_expression": {
      "type": "CHOICE",
      "members": [
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "{"
            },
            {
              "type": "CHOICE",
              "members": [
                {
                  "type": "SEQ",
                  "members": [
                    {
                      "type": "CHOICE",
                      "members": [
                        {
                          "type": "SYMBOL",
                          "name": "_expression"
                        },
                        {
                          "type": "SYMBOL",
                          "name": "value"
                        }
                      ]
                    },
                    {
                      "type": "REPEAT",
                      "content": {
                        "type": "SEQ",
                        "members": [
                          {
                            "type": "STRING",
                            "value": ","
                          },
                          {
                            "type": "CHOICE",
                            "members": [
                              {
                                "type": "SYMBOL",
                                "name": "_expression"
                              },
                              {
                                "type": "SYMBOL",
                                "name": "value"
                              }
                            ]
                          }
                        ]
                      }
                    }
                  ]
                },
                {
                  "type": "BLANK"
                }
              ]
            },
            {
              "type": "STRING",
              "value": "}"
            }
          ]
        },
        {
          "type": "SEQ",
          "members": [
            {
              "type": "STRING",
              "value": "set of"
            },
            {
              "type": "SYMBOL",
              "name": "type"
            }
          ]
        }
      ]
    },
    "hash_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "hash"
        },
        {
          "type": "STRING",
          "value": "["
        },
        {
          "type": "SYMBOL",
          "name": "type"
        },
        {
          "type": "STRING",
          "value": "]"
        },
        {
          "type": "SYMBOL",
          "name": "type"
        }
      ]
    },
    "enum_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "new enum"
        },
        {
          "type": "SYMBOL",
          "name": "name"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SEQ",
            "members": [
              {
                "type": "STRING",
                "value": ","
              },
              {
                "type": "SYMBOL",
                "name": "name"
              }
            ]
          }
        },
        {
          "type": "STRING",
          "value": "end enum"
        }
      ]
    },
    "struct_expression": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "new"
            },
            {
              "type": "STRING",
              "value": "sub"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "struct"
        },
        {
          "type": "SYMBOL",
          "name": "declaration"
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "SYMBOL",
            "name": "declaration"
          }
        },
        {
          "type": "STRING",
          "value": "end struct"
        }
      ]
    },
    "binary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "STRING",
          "value": "-"
        },
        {
          "type": "STRING",
          "value": "*"
        },
        {
          "type": "STRING",
          "value": "/"
        },
        {
          "type": "STRING",
          "value": "and"
        },
        {
          "type": "STRING",
          "value": "or"
        },
        {
          "type": "STRING",
          "value": "parse"
        },
        {
          "type": "STRING",
          "value": "rem"
        },
        {
          "type": "STRING",
          "value": "div"
        },
        {
          "type": "STRING",
          "value": "mdiv"
        },
        {
          "type": "STRING",
          "value": "mod"
        },
        {
          "type": "STRING",
          "value": "times"
        },
        {
          "type": "STRING",
          "value": ".."
        },
        {
          "type": "STRING",
          "value": "**"
        }
      ]
    },
    "unary_operator": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "not"
        }
      ]
    },
    "boolean": {
      "type": "CHOICE",
      "members": [
        {
          "type": "STRING",
          "value": "TRUE"
        },
        {
          "type": "STRING",
          "value": "FALSE"
        }
      ]
    },
    "name": {
      "type": "PREC_RIGHT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "SYMBOL",
            "name": "variable"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "cast"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    },
    "variable": {
      "type": "PATTERN",
      "value": "[a-zA-Z_][a-zA-Z0-9_]*"
    },
    "integer": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "-"
            },
            {
              "type": "BLANK"
            }
          ]
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_decimalLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_exponentialLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_hexLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_octalLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_binaryLiteral"
            }
          ]
        }
      ]
    },
    "cast": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "+"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "type"
            },
            {
              "type": "SYMBOL",
              "name": "castFunction"
            }
          ]
        }
      ]
    },
    "castFunction": {
      "type": "SEQ",
      "members": [
        {
          "type": "STRING",
          "value": "ord"
        }
      ]
    },
    "_decimalLiteral": {
      "type": "PATTERN",
      "value": "[0-9]+"
    },
    "_exponentialLiteral": {
      "type": "PATTERN",
      "value": "[0-9]+[eE][+]?[0-9]+"
    },
    "_negativeExponentialLiteral": {
      "type": "PATTERN",
      "value": "[0-9]+[eE][-]?[0-9]+"
    },
    "_hexLiteral": {
      "type": "PATTERN",
      "value": "16#[0-9A-Fa-f]+"
    },
    "_octalLiteral": {
      "type": "PATTERN",
      "value": "8#[0-7]+"
    },
    "_binaryLiteral": {
      "type": "PATTERN",
      "value": "2#[01]+"
    },
    "string": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        },
        {
          "type": "REPEAT",
          "content": {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "."
              }
            ]
          }
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "STRING",
              "value": "\""
            }
          ]
        }
      ]
    },
    "float": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_decimalLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_exponentialLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_negativeExponentialLiteral"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "."
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_decimalLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_exponentialLiteral"
            },
            {
              "type": "SYMBOL",
              "name": "_negativeExponentialLiteral"
            }
          ]
        }
      ]
    },
    "bigRational": {
      "type": "SEQ",
      "members": [
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_decimalLiteral"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "_/"
        },
        {
          "type": "CHOICE",
          "members": [
            {
              "type": "SYMBOL",
              "name": "_decimalLiteral"
            }
          ]
        },
        {
          "type": "STRING",
          "value": "_"
        }
      ]
    },
    "rational": {
      "type": "PREC",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_decimalLiteral"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "/"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "SYMBOL",
                "name": "_decimalLiteral"
              }
            ]
          }
        ]
      }
    },
    "bigInteger": {
      "type": "SEQ",
      "members": [
        {
          "type": "SYMBOL",
          "name": "integer"
        },
        {
          "type": "STRING",
          "value": "_"
        }
      ]
    },
    "char": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "'"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "escape_sequence"
              }
            ]
          },
          {
            "type": "STRING",
            "value": "'"
          }
        ]
      }
    },
    "escape_sequence": {
      "type": "PREC_LEFT",
      "value": 1,
      "content": {
        "type": "SEQ",
        "members": [
          {
            "type": "STRING",
            "value": "\\"
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "PATTERN",
                "value": "."
              },
              {
                "type": "SYMBOL",
                "name": "value"
              },
              {
                "type": "STRING",
                "value": "'"
              },
              {
                "type": "STRING",
                "value": "\""
              }
            ]
          },
          {
            "type": "CHOICE",
            "members": [
              {
                "type": "STRING",
                "value": ";"
              },
              {
                "type": "BLANK"
              }
            ]
          }
        ]
      }
    }
  },
  "extras": [
    {
      "type": "PATTERN",
      "value": "\\s"
    },
    {
      "type": "SYMBOL",
      "name": "line_comment"
    },
    {
      "type": "SYMBOL",
      "name": "block_comment"
    }
  ],
  "conflicts": [],
  "precedences": [],
  "externals": [],
  "inline": [],
  "supertypes": []
}

